service: ${self:custom.projectName}

configValidationMode: error

frameworkVersion: ^2.52.1

plugins:
  - serverless-offline
  - serverless-plugin-resource-tagging
  - serverless-plugin-warmup

package:
  exclude:
    - ./**
  include:
    - ./bin/**
    - ./secrets.*.yaml

custom:
  defaultStage: local
  currentStage: ${opt:stage, self:custom.defaultStage} # use the --stage flag to set 'local' or 'stage' or 'prod' envs
  CONFIG_FILE: secrets.${self:custom.currentStage}.yaml
  projectName: go-github-app-boilerplate
  serverless-offline:
    useDocker: true
    noPrependStageInUrl: true
  warmup:
    default:
      enabled: true
      events:
        - schedule: cron(0/5 8-17 ? * MON-FRI *)
      concurrency: 1
    timeout: 20
    prewarm: true
    testWarmer:
      enabled: false

provider:
  lambdaHashingVersion: 20201221
  name: aws
  stage: ${self:custom.currentStage}
  runtime: go1.x
  environment:
    environment: ${self:custom.currentStage}
  stackTags:
    owner: ${self:custom.projectName}
    environment: ${self:custom.currentStage}
# add iam role statements here to allow or deny access to resources in aws
#  iamRoleStatements:
#    - Effect: "Allow"
#      Action:
#        - codebuild:StartBuild
#      Resource: "*"

functions:
  webhooks:
    handler: bin/app.go
    timeout: 60
    environment:
      CONFIG_FILE: ${self:custom.CONFIG_FILE}
    events:
      - http:
          path: webhooks
          method: post
    warmup:
      default:
        enabled: true
